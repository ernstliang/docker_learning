version: '2'
services:
  mysql:
    image: mysql:5.7
    restart: always
    ports:
      - "3306:3306"
    # 环境变量
    environment:
      # mysql密码
      - MYSQL_ROOT_PASSWORD=${ENV_MYSQL_PASSWORD}
    # 数据库数据持久化
    volumes:
      - "${ENV_MYSQL_VOLUME}:/var/lib/mysql"
      - "${PWD}/mysql.conf.d:/etc/mysql/mysql.conf.d/"
  redis:
    image: "redis:alpine"
    restart: always
    command: redis-server --requirepass ${ENV_REDIS_PASSWORD}
    ports:
      - "6379:6379"
  rabbitmq:
    image: rabbitmq:management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${ENV_RABBITMQ_NAME}
      - RABBITMQ_DEFAULT_PASS=${ENV_RABBITMQ_PASSWORD}
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  # jaeger改用单独docker-compse
  trace:
    image: jaegertracing/all-in-one:1.9
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    # docker-compose non swarm mode resource限制需要version 2
    # 参见https://docs.docker.com/compose/compose-file/compose-file-v2/#cpu-and-other-resources
    # cpu_count: 1
    # cpus: '0.50'
    mem_limit: 512m
    # docker-compose swarm mode resource使用version 3
    # 参见https://docs.docker.com/compose/compose-file/#resources
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.50'
    #       memory: 512M
    #     reservations:
    #       cpus: '0.25'
    #       memory: 100M